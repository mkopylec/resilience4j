resilience4j.retry:
  backends:
    retryBackendA:
      maxRetryAttempts: 3
      waitDuration: 600ms
      retryExceptionPredicate: io.github.resilience4j.circuitbreaker.RecordFailurePredicate
      retryExceptions:
      - java.io.IOException
      ignoreExceptions:
      - io.github.resilience4j.circuitbreaker.IgnoredException
    retryBackendB:
      maxRetryAttempts: 3
      waitDuration: 600ms
      retryExceptionPredicate: io.github.resilience4j.circuitbreaker.RecordFailurePredicate
      retryExceptions:
      - java.io.IOException
      ignoreExceptions:
      - io.github.resilience4j.circuitbreaker.IgnoredException
resilience4j.circuitbreaker:
  configs:
    default:
      ringBufferSizeInClosedState: 100
      ringBufferSizeInHalfOpenState: 10
      waitDurationInOpenState: 10s
      failureRateThreshold: 60
      eventConsumerBufferSize: 10
      registerHealthIndicator: true
  backends:
    backendA:
      ringBufferSizeInClosedState: 6
      ringBufferSizeInHalfOpenState: 2
      waitDurationInOpenState: 5s
      failureRateThreshold: 70
      eventConsumerBufferSize: 10
      registerHealthIndicator: true
      recordFailurePredicate: io.github.resilience4j.circuitbreaker.RecordFailurePredicate
      recordExceptions:
      - io.github.resilience4j.circuitbreaker.RecordedException
      ignoreExceptions:
      - io.github.resilience4j.circuitbreaker.IgnoredException
    backendB:
      ringBufferSizeInClosedState: 10
      ringBufferSizeInHalfOpenState: 5
      waitDurationInOpenState: 5000
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      registerHealthIndicator: false
    backendSharedA:
      baseConfig: default
      ringBufferSizeInClosedState: 6
    backendSharedB:
      baseConfig: default

resilience4j.ratelimiter:
  limiters:
    backendA:
      limitForPeriod: 10
      limitRefreshPeriod: 1s
      timeoutDuration: 0
      subscribeForEvents: true
      registerHealthIndicator: true
    backendB:
      limitForPeriod: 100
      limitRefreshPeriod: 500ms
      timeoutDuration: 3s

resilience4j.bulkhead:
  backends:
    backendA:
      maxConcurrentCalls: 1
    backendB:
      maxWaitDuration: 10
      maxConcurrentCalls: 2

management.security.enabled: false
management.endpoint.health.show-details: always